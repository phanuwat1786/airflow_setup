---
x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-extending_airflow:2.10.3}
  env_file:
    - .env
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__TEST_CONNECTION: 'Enabled'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    AIRFLOW__WEBSERVER__RBAC: 'true'
    AIRFLOW__CORE__DEFAULT_TIMEZONE: UTC
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: UTC
    AIRFLOW__CORE__LAZY_LOAD_PLUGINS: 'False'
    AIRFLOW__WEBSERVER__WEB_SERVER_PORT: '8081'
    AIRFLOW__CORE__FERNET_KEY: "${FERNET_KEY}"
  networks:
    - airflow_network
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
    - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:0"
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"

services:
  airflow-init:
    <<: *airflow-common
    command: ["airflow", "db", "init"]
    restart: "no"    

  airflow-webserver:
    <<: *airflow-common
    command: ["airflow", "webserver"]
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      airflow-init:
        condition: "service_completed_successfully"

  airflow-add-admin:
    <<: *airflow-common

    command: ["airflow", "users", "create", "--username", "${AIRFLOW_USERNAME}", 
              "--firstname", "Admin3", "--lastname", "Admin3", "--role", "Admin",
               "--email","admin3@example.org","--password","${AIRFLOW_PASSWORD}"]
    restart: "no"
    depends_on:
      airflow-init:
        condition: "service_completed_successfully"

  airflow-scheduler:
    <<: *airflow-common
    command: ["airflow","scheduler"]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      airflow-webserver:
        condition: "service_healthy"

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      airflow-scheduler:
        condition: "service_healthy"

networks:
  airflow_network:
    name: airflow_network
    external: true